openapi: 3.0.0
info:
  title: Athena MHMD API
  description: >-
    An API for multi-level privacy preservation techniques.
  version: 0.0.1
tags:
  - name: Amnesia
    description: >-
      Amnesia is a data anonymization tool, that allows to remove identifying
      information from data. mnesia not only removes direct identifiers like
      names, SSNs etc but also transforms secondary identifiers like birth date
      and zip code so that individuals cannot be identified in the data. Amnesia
      supports k-anonymity and k^m-anonymity
  - name: SMPC
    description: 'Secure multi party computation platform'
paths:
  /smpc/import:
    post:
      tags:
      - SMPC
      summary: Securely import data into the SMPC Platform.
      description: "Import a specified attribute into the SMPC cluster. This API call is used internally"
      requestBody:
        description: The attribute for which data will be imported
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Import'
      responses:
        '200':
          description: Data imported successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /smpc/count/:
    post:
      tags:
        - SMPC
      summary: Initiate a secure count computation on a specified attribute.
      description: "Compute the counts of all possible values of a desired attribute, over the specifed datasources. The specified attribute should be a valid Mesh term."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Count"
      responses:
        '202':
          description: Count computation accepted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputationAccepted"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /smpc/queue:
    get:
      tags:
        - SMPC
      summary: "Poll for an ongoing computation status."
      description: "Check the status of an ongoing computation. Returns its status, possibly its current step and on success, the computation result in JSON format."
      parameters:
        - in: query
          name: request
          schema:
            type: string
          description: The request id.
      responses:
        '200':
          description: ΟΚ.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComputationResponse"
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /amnesia/session:
    get:
      tags:
        - Amnesia
      summary: Get a session id.
      security: []
      responses:
        '200':
          description: >
            The session ID is returned in a cookie named `JSESSIONID`. You need
            to include this cookie in subsequent requests.
          headers:
            Set-Cookie:
              schema:
                type: string
                example: JSESSIONID=abcde12345; Path=/; HttpOnly
  /amnesia/dataset:
    post:
      tags:
        - Amnesia
      summary: Upload a dataset.
      security:
        - cookieAuth: []
      requestBody:
        required: true
        description: The metadata and the file of the dataset
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dataset'
      responses:
        '200':
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /amnesia/hierarchy:
    post:
      tags:
        - Amnesia
      summary: Upload a hierarchy.
      security:
        - cookieAuth: []
      requestBody:
        description: The hierarchy file
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hierarchy'
      responses:
        '200':
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /amnesia/anonymize:
    post:
      tags:
        - Amnesia
      summary: Executes k or km anonimity.
      security:
        - cookieAuth: []
      requestBody:
        description: The parameters of the algorithm
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Algorithm'
      responses:
        '200':
          description: A file containing the best anonymized solution based on information loss
          content:
            application/csv:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: JSESSIONID
  schemas:
    Dataset:
      required:
        - file
        - del
        - datatype
        - vartypes
        - checkColumns
      properties:
        file:
          type: string
          format: binary
          description: The file
        del:
          type: string
          description: The split delimiter
        datatype:
          type: string
          description: 'The data type of the dataset: ''tabular'' or ''set'''
        vartypes:
          type: array
          description: >-
            An array with the variable types of the columns: ['int', 'double',
            'string', 'date']
          items:
            type: string
        checkColumns:
          type: array
          description: >-
            A boolean array indicating which column should participate in the
            anonymization: ['true', 'false']
          items:
            type: boolean
    Hierarchy:
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: The file
    Algorithm:
      required:
        - k
        - m
        - algo
        - relations
      properties:
        k:
          type: integer
          description: the k variable for k-anonymity
        m:
          type: integer
          description: the m variable for km-anonymity
        algo:
          type: string
          description: 'the specific algorithm, ''k-anonymity'' or ''km-anonymity'''
        relations:
          type: array
          description: An array with the name of each hierarchy. (Only the quasi-identifiers. The others identifiers are empty)
          items:
            type: string
    Error:
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
    Import:
      required:
      - attribute
      properties:
        attribute:
          type: string
          example: "Persons"
    Count:
      required:
        - attribute
      properties:
        attribute:
          description: "Attribute for which counts will be computed. Should be a valid Mesh term."
          type: "string"
          example: "Persons"
        datasources:
          description: "Datasources from which the histogram(s) will be computated. Optional. All datasources will be considered if left blank."
          type: "array"
          items:
            type: "string"
          example: ["HospitalA", "HospitalB"]
    ComputationResponse:
      required:
        - status
      description: "List of serialized versions for each histogram."
      type: object
      properties:
        status:
          type: string
          enum:
            - "succeeded"
            - "running"
            - "failed"
            - "notstarted"
        step:
          description: "Current step of the computation"
          type: string
        result:
          type: object
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                  value:
                    type: integer
          example: {"data":[{"value":0,"label":"Prisoners"},{"value":0,"label":"Vegetarians"},{"value":0,"label":"Transients and Migrants"},{"value":10,"label":"Men"},{"value":0,"label":"Students"},{"value":0,"label":"Child, Abandoned"},{"value":0,"label":"Transplant Recipients"},{"value":0,"label":"Tissue Donors"},{"value":0,"label":"Refugees"},{"value":0,"label":"Spouses"},{"value":0,"label":"Pedestrians"},{"value":0,"label":"Child, Exceptional"},{"value":0,"label":"Minors"},{"value":0,"label":"Parents"},{"value":0,"label":"Emigrants and Immigrants"},{"value":0,"label":"Consultants"},{"value":0,"label":"Child, Foster"},{"value":0,"label":"Siblings"},{"value":0,"label":"Veterans"},{"value":0,"label":"Drug Users"},{"value":0,"label":"Sexual and Gender Minorities"},{"value":0,"label":"Sex Workers"},{"value":0,"label":"Child, Unwanted"},{"value":0,"label":"Jehovah's Witnesses"},{"value":0,"label":"Homebound Persons"},{"value":0,"label":"Occupational Groups"},{"value":0,"label":"Famous Persons"},{"value":0,"label":"Legal Guardians"},{"value":0,"label":"Terminally Ill"},{"value":0,"label":"Patients"},{"value":0,"label":"Homeless Persons"},{"value":0,"label":"Visitors to Patients"},{"value":0,"label":"Slaves"},{"value":0,"label":"Smokers"},{"value":0,"label":"Bedridden Persons"},{"value":0,"label":"Athletes"},{"value":0,"label":"Vulnerable Populations"},{"value":0,"label":"Abortion Applicants"},{"value":0,"label":"Adult Children"},{"value":0,"label":"Crime Victims"},{"value":9,"label":"Women"},{"value":0,"label":"Single Person"},{"value":0,"label":"Missionaries"},{"value":0,"label":"Caregivers"},{"value":0,"label":"Volunteers"},{"value":0,"label":"Criminals"},{"value":0,"label":"Survivors"},{"value":0,"label":"Working Poor"},{"value":0,"label":"Medically Uninsured"},{"value":0,"label":"Disabled Persons"},{"value":0,"label":"Disaster Victims"},{"value":0,"label":"Mentors"},{"value":0,"label":"Friends"},{"value":0,"label":"Child of Impaired Parents"},{"value":0,"label":"Sexual Partners"},{"value":0,"label":"Population Groups"},{"value":0,"label":"Age Groups"},{"value":0,"label":"Research Subjects"},{"value":0,"label":"Alcoholics"},{"value":0,"label":"Grandparents"},{"value":0,"label":"Multiple Birth Offspring"},{"value":0,"label":"Child, Orphaned"},{"value":0,"label":"Child, Adopted"}]}

    ComputationAccepted:
      required:
        - location
      description: "Indication that the secure histogram computation has been accepted. The location provided should be used for status polling, and for results retrieval."
      type: object
      properties:
        location:
          type: string
      example: {"location" : "/smpc/queue?request=1"}

